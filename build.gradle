plugins {
	id 'fabric-loom' version '0.4-SNAPSHOT'
	id 'maven-publish'
	id "com.jfrog.bintray" version "1.8.4"
}

repositories {
	maven {
		name = "Fabric"
		url = "https://maven.fabricmc.net/"
	}
	maven {
		name = "Jared"
		url = "https://maven.blamejared.com"
	}
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.mod_name + "-" + project.mod_version + "+" + project.mod_target
group = project.mod_group

bintray {
	user = System.getenv("BINTRAY_USER")
	key = System.getenv("BINTRAY_KEY")
	publications = ['SpinneryPublication']
	pkg {
		repo = 'Spinnery'
		name = mod_name
		userOrg = 'spinnery'
		licenses = ['LGPL-3.0']
		vcsUrl = 'https://github.com/vini2003/Spinnery.git'
		version {
			name = project.mod_version + "+" + project.mod_target
			vcsTag = project.mod_version + "+" + project.mod_target
		}
	}
}

dependencies {
	// Minecraft
	minecraft "com.mojang:minecraft:${project.minecraft_version}"

	// Yarn
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"

	// Fabric Loader
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// Jankson
	modImplementation "blue.endless:jankson:${jankson_version}"
	include "blue.endless:jankson:${jankson_version}"

	// ModMenu
	modImplementation("io.github.prospector:modmenu:${modmenu_version}") { exclude group: "net.fabricmc.fabric-api" }

	// RoughlyEnoughItems
	modImplementation("me.shedaniel:RoughlyEnoughItems:${rei_version}") { exclude group: "net.fabricmc.fabric-api" }
}

processResources {
	inputs.property "mod_version", mod_version

	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand "mod_version": mod_version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

jar {
	from "LICENSE"
}

publishing {
	publications {
		SpinneryPublication(MavenPublication) {
			groupId 'com.github.vini2003'
			artifactId 'spinnery'
			version project.mod_version + "+" + project.mod_target

			artifact(remapJar) {
				builtBy remapJar
			}

			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}

			artifact javadocJar
		}
	}

	repositories {
		mavenLocal()
	}
}
